import tkinter as tk
import psycopg2

class JournalEntriesGUI(tk.Frame):
    def __init__(self, master=None):
        super().__init__(master)
        self.master = master
        self.master.title("Journal Entries")
        self.pack()
        self.create_widgets()

    def create_widgets(self):
        tk.Label(self, text="Title").grid(row=0, column=0)
        self.title_box = tk.Entry(self)
        self.title_box.grid(row=0, column=1)

        tk.Label(self, text="Dreams").grid(row=1, column=0)
        self.dreams_box = tk.Text(self, height=5)
        self.dreams_box.grid(row=1, column=1)

        tk.Label(self, text="Thoughts").grid(row=2, column=0)
        self.thoughts_box = tk.Text(self, height=5)
        self.thoughts_box.grid(row=2, column=1)

        tk.Label(self, text="Positive").grid(row=3, column=0)
        self.positive_box = tk.Text(self, height=5)
        self.positive_box.grid(row=3, column=1)

        tk.Label(self, text="One Thing").grid(row=4, column=0)
        self.one_thing_box = tk.Text(self, height=5)
        self.one_thing_box.grid(row=4, column=1)

        self.insert_button = tk.Button(
            self, text="Insert", command=self.insert_entry
        )
        self.insert_button.grid(row=5, column=0)

        self.retrieve_button = tk.Button(
            self, text="Retrieve", command=self.retrieve_entries
        )
        self.retrieve_button.grid(row=5, column=1)

def connect_to_database():
    conn = psycopg2.connect(
        dbname="journal_entries",
        user="yourusername",
        password="yourpassword",
        host="localhost",
        port="5432",
    )
    return conn

def insert_entry(title, dreams, thoughts, positive, one_thing):
    conn = connect_to_database()
    cur = conn.cursor()
    cur.execute(
        "INSERT INTO entries (title, dreams, thoughts, positive, one_thing) VALUES (%s, %s, %s, %s, %s)",
        (title, dreams, thoughts, positive, one_thing),
    )
    conn.commit()
    cur.close()
    conn.close()

def retrieve_entries():
    conn = connect_to_database()
    cur = conn.cursor()
    cur.execute("SELECT * FROM entries")
    entries = cur.fetchall()
    cur.close()
    conn.close()
    return entries
