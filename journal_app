import tkinter as tk
import psycopg2
from datetime import datetime
from tkinter import ttk

class JournalDatabase:
    def __init__(self):
        self.conn = psycopg2.connect(database="journal_entries",
                                     user="postgres",
                                     password="yourpassword")

    def insert_entry(self, title, dreams, thoughts, positive, one_thing):
        cur = self.conn.cursor()
        cur.execute("INSERT INTO entries (title, dreams, thoughts, positive, one_thing, created_at) VALUES (%s, %s, %s, %s, %s, %s)",
                    (title, dreams, thoughts, positive, one_thing, datetime.now()))
        self.conn.commit()
        cur.close()

    def get_entries_by_date(self, start_date, end_date):
        cur = self.conn.cursor()
        cur.execute("SELECT * FROM entries WHERE created_at BETWEEN %s AND %s", (start_date, end_date))
        rows = cur.fetchall()
        cur.close()
        return rows
    
class JournalEntriesGUI(tk.Frame):
    def __init__(self, master=None):
        super().__init__(master)
        self.master = master
        self.master.title("Journal Entries")
        self.pack()
        self.create_widgets()
        self.db = JournalDatabase()

    def create_widgets(self):
        # Create labels and input boxes for the entry form

        dreams_label = tk.Label(self, text="Dreams:")
        dreams_label.grid(row=0, column=0)
        self.dreams_box = tk.Text(self, height=5, width=50, wrap = tk.WORD)
        self.dreams_box.grid(row=0, column=1)

        thoughts_label = tk.Label(self, text="Thoughts:")
        thoughts_label.grid(row=1, column=0)
        self.thoughts_box = tk.Text(self, height=5, width=50, wrap = tk.WORD)
        self.thoughts_box.grid(row=1, column=1)

        positive_label = tk.Label(self, text="Positive Affirmation:")
        positive_label.grid(row=2, column=0)
        self.positive_box = tk.Text(self, height=5, width=50, wrap = tk.WORD)
        self.positive_box.grid(row=2, column=1)

        one_thing_label = tk.Label(self, text="One thing to get done:")
        one_thing_label.grid(row=3, column=0)
        self.one_thing_box = tk.Text(self, height=5, width=50, wrap = tk.WORD)
        self.one_thing_box.grid(row=3, column=1)

        # Create a button to submit the form
        submit_button = tk.Button(self, text="Submit", command=self.submit)
        submit_button.grid(row=4, column=1)
        
        # Create a button to retrieve entries
        retrieve_button = tk.Button(self, text="Retrieve Entries", command=self.show_entries_by_date)
        retrieve_button.grid(row=5, column=1)

        #Start and End Date Boxes and Format Descriptor

        date_format_label = tk.Label(self, text="Format = YYYY-MM-DD")
        date_format_label.grid(row=5, column=0)

        start_date_label = tk.Label(self, text="Start Date")
        start_date_label.grid(row=6, column=0)
        self.start_date_box = tk.Text(self, height=1, width=10)
        self.start_date_box.grid(row=7, column=0)

        end_date_label = tk.Label(self, text="End Date")
        end_date_label.grid(row=6, column=1)
        self.end_date_box = tk.Text(self, height=1, width=10)
        self.end_date_box.grid(row=7, column=1)

    def submit(self):
        # Retrieve values from input boxes
        title = self.title_box.get()
        dreams = self.dreams_box.get("1.0", tk.END)
        thoughts = self.thoughts_box.get("1.0", tk.END)
        positive = self.positive_box.get("1.0", tk.END)
        one_thing = self.one_thing_box.get("1.0", tk.END)

        # Insert entry into database
        self.db.insert_entry(title, dreams, thoughts, positive, one_thing)

        # Clear input boxes
        self.title_box.delete(0, tk.END)
        self.dreams_box.delete("1.0", tk.END)
        self.thoughts_box.delete("1.0", tk.END)
        self.positive_box.delete("1.0", tk.END)
        self.one_thing_box.delete("1.0", tk.END)

    def show_entries_by_date(self):
        # Retrieve start and end dates from user input
        start_date_str = self.start_date_box.get("1.0", tk.END).strip()
        end_date_str = self.end_date_box.get("1.0", tk.END).strip()

        # Retrieve entries from the database
        rows = self.db.get_entries_by_date(start_date_str, end_date_str)

        # Create a new window to display the retrieved entries
        entries_window = tk.Toplevel(self.master)
        entries_window.title("Entries")
        entries_text = tk.Text(entries_window, height=20, width=50, wrap = tk.WORD)
        entries_text.pack()

        # Add each row to the Text widget
        for row in rows:
            entries_text.insert(tk.END, f"Date: {row[1]}\n")
            entries_text.insert(tk.END, f"Dreams: {row[2]}\n")
            entries_text.insert(tk.END, f"Thoughts: {row[3]}\n")
            entries_text.insert(tk.END, f"Positive Affirmation: {row[4]}\n")
            entries_text.insert(tk.END, f"One thing to get done: {row[5]}\n\n")

root = tk.Tk()
app = JournalEntriesGUI(master=root)
app.mainloop()


